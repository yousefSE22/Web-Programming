(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))o(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function t(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(n){if(n.ep)return;n.ep=!0;const r=t(n);fetch(n.href,r)}})();console.log("Chat Application Logic");function E(){const e=v("Chat",`<div id="chatMessages"></div>
                         <input type="text" id="usernameInput" placeholder="Enter Name">
                         <input type="text" id="messageInput" placeholder="Enter message">
                         <button id="sendButton">Send</button>`,"chat-app");e.querySelector("#sendButton").addEventListener("click",()=>k(e)),e.querySelector("#usernameInput").addEventListener("click",o=>{o.target.focus()}),e.querySelector("#messageInput").addEventListener("click",o=>{o.target.focus()})}const g=new WebSocket("wss://courselab.lnu.se/message-app/socket"),q="eDBE76deU7L0H9mEBgxUKVR0VCnq0XBd";g.addEventListener("open",s=>{console.log("WebSocket connection opened:",s)});g.addEventListener("message",s=>{const e=JSON.parse(s.data);G(e)});function k(s){const e=s.querySelector("#usernameInput"),t=s.querySelector("#messageInput"),o=e.value,n=t.value;if(!o||!n){alert("Please enter both username and message.");return}const r={type:"message",data:n,username:o,channel:"general",key:q};g.send(JSON.stringify(r)),t.value=""}function G(s){const e=document.querySelectorAll(".chat-app");s.type!=="heartbeat"&&e.forEach(t=>{const o=t.querySelector("#chatMessages"),n=document.createElement("div");n.innerHTML=`<strong>${s.username}:</strong> ${s.data}`,o.appendChild(n)})}class M{constructor(){this.cardSymbols=["🐱","🐶","🐭","🐰","🐯","🦁","🐻","🐷"],this.totalPairs=this.cardSymbols.length,this.matchedPairs=0,this.firstCard=null,this.secondCard=null,this.lockBoard=!1,this.startTime=null,this.gridSizeRows=4,this.gridSizeColumns=4}handleKeyPress(e,t){e.key==="Enter"||e.key===" "?this.flipCard(t):e.key.startsWith("Arrow")&&this.moveFocus(e.key)}moveFocus(e){const t=document.querySelectorAll(".card"),o=document.activeElement;let n;switch(e){case"ArrowRight":n=Array.from(t).indexOf(o)+1;break;case"ArrowLeft":n=Array.from(t).indexOf(o)-1;break;case"ArrowDown":n=Array.from(t).indexOf(o)+this.gridSizeColumns;break;case"ArrowUp":n=Array.from(t).indexOf(o)-this.gridSizeColumns;break}this.setFocus(t,n)}flipFocusedCard(){const e=document.querySelector(".card.focused");e&&this.flipCard(e)}setFocus(e,t){if(t>=0&&t<e.length){const o=e[t];document.querySelector(".card.focused")&&document.querySelector(".card.focused").classList.remove("focused"),o.classList.add("focused"),o.focus()}}setGridSize(e,t,o){this.gridSizeRows=e,this.gridSizeColumns=t,this.totalPairs=this.gridSizeRows*this.gridSizeColumns/2,this.startMemoryGame(o)}isGameOver(){return this.matchedPairs===this.totalPairs}endMemoryGame(){const t=(new Date-this.startTime)/1e3;alert(`Congratulations! You've completed the game in ${t.toFixed(2)} seconds.`)}shuffle(e){let t=e.length,o,n;for(;t!==0;)o=Math.floor(Math.random()*t),t--,n=e[t],e[t]=e[o],e[o]=n;return e}resetBoard(){[this.firstCard,this.secondCard]=[null,null],this.lockBoard=!1}startMemoryGame(e){this.matchedPairs=0,this.startTime=new Date;const o=e.closest(".window").querySelector("#memoryGameGrid");o.querySelectorAll(".card").forEach((i,d)=>{i.tabIndex=0,i.addEventListener("click",()=>this.flipCard(i)),i.addEventListener("keydown",c=>this.handleKeyPress(c,i))}),o.innerHTML="";const a=[...new Set(this.shuffle(this.cardSymbols))].slice(0,this.totalPairs),f=this.shuffle(a.concat(a));for(let i=0;i<this.totalPairs*2;i++){const d=document.createElement("div");d.classList.add("card"),d.dataset.symbol=f[i];const c=document.createElement("span");c.classList.add("card-content"),c.innerText="?",d.appendChild(c),d.addEventListener("click",()=>this.flipCard(d)),d.addEventListener("keydown",l=>this.handleKeyPress(l,d)),d.tabIndex=0,o.appendChild(d)}const u=o.querySelector(".card");u&&u.focus(),o.style.gridTemplateColumns=`repeat(${this.gridSizeColumns}, 1fr)`,o.style.gridTemplateRows=`repeat(${this.gridSizeRows}, 1fr)`}flipCard(e){if(this.lockBoard||e===this.firstCard)return;e.classList.add("flipped");const t=e.querySelector(".card-content");if(t.innerText=e.dataset.symbol,!this.firstCard){this.firstCard=e;return}this.secondCard=e,this.checkForMatch()}disableCards(){this.firstCard.removeEventListener("click",()=>this.flipCard(this.firstCard)),this.secondCard.removeEventListener("click",()=>this.flipCard(this.secondCard)),this.resetBoard()}checkForMatch(){this.firstCard.dataset.symbol===this.secondCard.dataset.symbol?(this.disableCards(),this.matchedPairs++,this.isGameOver()&&this.endMemoryGame()):this.unflipCards()}unflipCards(){this.lockBoard=!0,setTimeout(()=>{this.firstCard.classList.remove("flipped"),this.secondCard.classList.remove("flipped");const e=this.firstCard.querySelector(".card-content"),t=this.secondCard.querySelector(".card-content");e.innerText="?",t.innerText="?",this.resetBoard()},1e3)}restartMemoryGame(e){const t=e.closest(".window");this.startMemoryGame(t)}}function T(){const s=new M,e=v("Memory Game","","memory-game-app"),t=`
    <div class="window-header">
      <span class="title">Memory Game</span>
      <span class="close-btn">X</span>
    </div>
    <div id="memoryGameGrid" class="memory-game-grid"></div>
    <button id="grid4x4">4x4 Grid</button>
    <button id="grid4x2">4x2 Grid</button>
    <button id="grid2x2">2x2 Grid</button>
  `;e.innerHTML=t;const o=e.querySelector("#grid4x4"),n=e.querySelector("#grid4x2"),r=e.querySelector("#grid2x2");o.addEventListener("click",()=>s.setGridSize(4,4,e)),n.addEventListener("click",()=>s.setGridSize(4,2,e)),r.addEventListener("click",()=>s.setGridSize(2,2,e)),e.querySelector(".close-btn").addEventListener("click",()=>A(e)),s.setGridSize(4,4,e)}function A(s){s&&(s.style.display="none")}console.log("Custom App Logic");function B(){const e=v("Custom App",`
    <div id="customAppContent"></div>
    <button id="randomQuoteButton">Show Random Quote</button>
  `,"custom-app");e.querySelector("#randomQuoteButton").addEventListener("click",()=>b(e)),b(e)}const S=["Believe you can and you're halfway there. -Theodore Roosevelt","The only limit to our realization of tomorrow will be our doubts of today. -Franklin D. Roosevelt","Don't watch the clock; do what it does. Keep going. -Sam Levenson","Success is not final, failure is not fatal: It is the courage to continue that counts. -Winston Churchill","Your time is limited, don't waste it living someone else's life. -Steve Jobs","The only way to do great work is to love what you do. -Steve Jobs","In the middle of difficulty lies opportunity. -Albert Einstein","The future belongs to those who believe in the beauty of their dreams. -Eleanor Roosevelt"];function b(s){const t=s.closest(".window").querySelector("#customAppContent");t.innerHTML="";const o=document.createElement("div");o.classList.add("quote"),o.innerText=I(),t.appendChild(o)}function I(){const s=Math.floor(Math.random()*S.length);return S[s]}let m=1;const w=document.querySelectorAll(".icon");w[0].addEventListener("click",()=>{T()});w[1].addEventListener("click",()=>{E()});w[2].addEventListener("click",()=>{B()});function v(s,e,t){const o=document.createElement("div");o.className="window",o.classList.add(t),o.style.zIndex=m++,o.innerHTML=`
        <div class="window-header">
            <span class="title">${s}</span>
            <span class="close-btn" onclick="closeWindow(this)">X</span>
        </div>
        <div class="window-content">
            ${e}
        </div>
    `,document.getElementById("desktop").appendChild(o);const n=50+(m-1)*20,r=50+(m-1)*20;return o.style.left=n+"px",o.style.top=r+"px",W(o),o.querySelector(".close-btn").addEventListener("click",()=>o.remove()),o}let h=!1,L,x,p,y;document.querySelectorAll(".window-header").forEach(s=>{s.addEventListener("mousedown",e=>{h=!0,p=e.clientX,y=e.clientY}),s.addEventListener("mouseup",()=>{h=!1}),s.addEventListener("mousemove",e=>{if(h){e.preventDefault(),L=p-e.clientX,x=y-e.clientY,p=e.clientX,y=e.clientY;const t=s.closest(".window"),o=t.getBoundingClientRect();t.style.top=t.offsetTop-x+"px",t.style.left=t.offsetLeft-L+"px",o.top<0&&(t.style.top="0px"),o.left<0&&(t.style.left="0px"),o.bottom>t.innerHeight&&(t.style.top=t.innerHeight-o.height+"px"),o.right>t.innerWidth&&(t.style.left=t.innerWidth-o.width+"px")}})});function W(s){let e=0,t=0,o=0,n=0;const r=()=>{s.style.zIndex=m++},a=i=>{i=i||window.event,i.preventDefault(),r(),o=i.clientX,n=i.clientY,document.onmouseup=u,document.onmousemove=f};s.querySelector(".title-bar")?s.querySelector(".title-bar").onmousedown=a:s.onmousedown=a;const f=i=>{i=i||window.event,i.preventDefault(),e=o-i.clientX,t=n-i.clientY,o=i.clientX,n=i.clientY;let d=s.offsetTop-t,c=s.offsetLeft-e;c<0&&(c=0),c+s.offsetWidth>window.innerWidth&&(c=window.innerWidth-s.offsetWidth);const l=window.innerHeight-s.offsetHeight;d>l&&(d=l);const C=0;d<C?d=C:d>l&&(d=l),s.style.top=d+"px",s.style.left=c+"px"},u=()=>{document.onmouseup=null,document.onmousemove=null}}
